rules_version = '2';

service cloud.firestore {

    function isAuthenticated() {
        return request.auth != null;
    }

    function isAdmin() {
        return request.auth.token.admin == true;
    }

    function isOwner(matchId) {
        return request.auth.uid == matchId;
    }

  match /databases/{database}/documents {
    match /socials/{documentId} {
      allow read: if isAuthenticated() && (isAdmin() || isOwner(resource.data.id));
      allow write: if isAuthenticated() && isAdmin();
    }

    // Tickets Collection Rules
    match /tickets/{ticketId} {
        // Only grant read perms to owner/admin
        allow read: if isAuthenticated() && (isAdmin() || isOwner(resource.data.userId));
        // Only grant write perms to admin
        allow write: if isAuthenticated() && isAdmin();
    }

    match /passClasses/{passClassId} {
        // Only grant read perms to owner/admin
        allow read: if isAuthenticated() && (isAdmin() || isOwner(resource.data.userId));
        // Only grant write perms to admin
        allow write: if isAuthenticated() && isAdmin();
    }

    // Applications Collection Rules
    match /applications/{applicationId} {
        // Only grant read access if you are owner/admin
        allow read: if isAuthenticated() && (isAdmin() || isOwner(resource.data.applicantId));
        allow write: if isAuthenticated() && isAdmin();
    }

    // Teams Collection Rules
    match /teams/{teamId} {
        // this rule is to allow only admin to read,write
        // because there is no way to filter out members
        // beloging to the team in rules, so the process
        // is done in cloud functions.
        allow read, write: if isAuthenticated() && isAdmin();
    }

    // RSVP Verifications
    match /rsvps/{rsvpId} {
        // Only grant read access if you are owner/admin
        allow read: if isAuthenticated() && (isOwner(resource.data.uid));
        allow write: if isAuthenticated();
    }

    match /events/{eventId} {
        // Only grant read access if you are owner/admin
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && isAdmin();
    }

    match /foods/{foodId} {
        // Only grant read access if you are owner/admin
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && isAdmin();
    }

    match /applications-dev/{applicationId} {
        allow read, write: if isAuthenticated() && isAdmin();
    }

    match /tickets-dev/{ticketId} {
        allow read, write: if isAuthenticated() && isAdmin();
    }

    match /users-dev/{documentId} {
        allow read, write: if isAuthenticated() && isAdmin();
    }

    // Default rule to deny read/write access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
